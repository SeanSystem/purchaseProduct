<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.highconcurrencydemo.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.example.highconcurrencydemo.entity.Product">
    <!--@mbg.generated-->
    <!--@Table t_product-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, product_name, stock, price, version, note
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <update id="decreaseProduct">
    update t_product
    set stock = stock - #{quantity},
    version = version + 1
    where id = #{id} and version = #{version}
  </update>

  <update id="decProduct">
    update t_product
    set stock = stock - #{quantity}
    where id = #{id}
  </update>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.highconcurrencydemo.entity.Product" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_product (product_name, stock, price, 
      version, note)
    values (#{productName,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{version,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.highconcurrencydemo.entity.Product" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productName != null">
        product_name,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.highconcurrencydemo.entity.Product">
    <!--@mbg.generated-->
    update t_product
    <set>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.highconcurrencydemo.entity.Product">
    <!--@mbg.generated-->
    update t_product
    set product_name = #{productName,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      version = #{version,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>